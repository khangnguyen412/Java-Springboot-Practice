plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.8'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

task watch(type: Exec) {
    commandLine 'gradle', 'bootRun'
    group = 'Application'
    description = 'Watch and restart application'
}

repositories {
	mavenCentral()
}

springBoot {
    mainClass = 'com.example.JavaSpingBootPractice.JavaSpingBootPracticeApplication'
}

dependencies {
	// ================== Caching ==================
	implementation 'org.springframework.boot:spring-boot-starter-cache'   // Starter cho cache trong Spring Boot
	implementation 'org.hibernate:hibernate-jcache:6.4.4.Final'           // Hibernate JCache integration
	implementation 'javax.cache:cache-api:1.1.1'                          // Chuẩn JCache API
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'         // Thư viện Caffeine caching
	implementation 'com.github.ben-manes.caffeine:jcache:3.1.8'           // Adapter Caffeine cho JCache

	// ================== Spring Boot Starters ==================
	implementation 'org.springframework.boot:spring-boot-starter'         // Starter cơ bản
	implementation 'org.springframework.boot:spring-boot-starter-web'     // Web (REST, Tomcat,...)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'// JPA + Hibernate
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation (Jakarta Validation)
	implementation 'org.springframework.boot:spring-boot-starter-security'   // Spring Security

	// ================== DevTools hỗ trợ hot reload ==================
	developmentOnly 'org.springframework.boot:spring-boot-devtools'       // DevTools hỗ trợ hot reload

	// ================== JWT ==================
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'   // API cho JWT
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'     // JWT implementation
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'  // JWT serialization/deserialization với Jackson

	// ================== Database ==================
	runtimeOnly 'com.mysql:mysql-connector-j'  // MySQL JDBC driver
	runtimeOnly 'com.h2database:h2'            // H2 (database in-memory để test/dev)

	// ================== Testing ==================
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Starter cho test (JUnit, Mockito,...)
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'           // JUnit platform launcher

	// ================== Actuator ==================
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus' // nếu muốn metrics Prometheus
}

tasks.named('test') {
	useJUnitPlatform()
}
